"""
Utilit√°rios para manipula√ß√£o de modelos
"""

import streamlit as st

def show_model_upload_section():
    """Se√ß√£o para upload do modelo quando n√£o est√° dispon√≠vel"""
    
    st.warning("‚ö†Ô∏è Modelo n√£o encontrado no sistema!")

    st.markdown("""
    ### üì§ Upload do Modelo

    Para usar o sistema, voc√™ precisa fazer upload do modelo treinado:

    1. **Treine o modelo** executando o pipeline de ML
    2. **Salve o modelo** com o c√≥digo abaixo:
    3. **Fa√ßa upload** do arquivo gerado
    """)

    st.code("""
# C√≥digo para salvar o modelo ap√≥s treinamento:
import pickle

# Supondo que voc√™ tenha o modelo treinado em 'modelo'
model_data = {
    'model': modelo,  # Seu modelo treinado
    'feature_names': feature_names,  # Lista de nomes das features
    'scaler': scaler  # Scaler se usado (opcional)
}

with open('modelo_viabilidade_final.pkl', 'wb') as f:
    pickle.dump(model_data, f)

print("‚úÖ Modelo salvo como: modelo_viabilidade_final.pkl")
""")

    # Upload do arquivo
    uploaded_file = st.file_uploader(
        "Fa√ßa upload do modelo (.pkl)",
        type=['pkl'],
        help="Arquivo .pkl gerado pelo c√≥digo acima"
    )

    if uploaded_file:
        try:
            # Salva o arquivo
            with open('modelo_viabilidade_final.pkl', 'wb') as f:
                f.write(uploaded_file.read())

            st.success("‚úÖ Modelo carregado com sucesso!")
            st.rerun()

        except Exception as e:
            st.error(f"‚ùå Erro ao carregar modelo: {e}")